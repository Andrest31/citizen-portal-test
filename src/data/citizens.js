// src/data/citizens.js

function randomItem(arr) {
  return arr[Math.floor(Math.random() * arr.length)];
}

// –§–ò–û
const LASTNAMES_M = ["–ò–≤–∞–Ω–æ–≤", "–ü–µ—Ç—Ä–æ–≤", "–°–∏–¥–æ—Ä–æ–≤", "–ö—É–∑–Ω–µ—Ü–æ–≤", "–°–º–∏—Ä–Ω–æ–≤", "–§—ë–¥–æ—Ä–æ–≤", "–°–æ–ª–æ–≤—å—ë–≤", "–ú–æ—Ä–æ–∑–æ–≤", "–í–æ–ª–∫–æ–≤", "–ï–≥–æ—Ä–æ–≤"];
const LASTNAMES_F = ["–ò–≤–∞–Ω–æ–≤–∞", "–ü–µ—Ç—Ä–æ–≤–∞", "–°–∏–¥–æ—Ä–æ–≤–∞", "–ö—É–∑–Ω–µ—Ü–æ–≤–∞", "–°–º–∏—Ä–Ω–æ–≤–∞", "–§—ë–¥–æ—Ä–æ–≤–∞", "–°–æ–ª–æ–≤—å—ë–≤–∞", "–ú–æ—Ä–æ–∑–æ–≤–∞", "–í–æ–ª–∫–æ–≤–∞", "–ï–≥–æ—Ä–æ–≤–∞"];
const FIRSTNAMES_M = ["–ê–ª–µ–∫—Å–µ–π", "–ò–≤–∞–Ω", "–ü–∞–≤–µ–ª", "–°–µ—Ä–≥–µ–π", "–ê–Ω–¥—Ä–µ–π", "–î–º–∏—Ç—Ä–∏–π", "–ù–∏–∫–æ–ª–∞–π", "–í–ª–∞–¥–∏–º–∏—Ä", "–û–ª–µ–≥", "–ï–≥–æ—Ä"];
const FIRSTNAMES_F = ["–ê–Ω–Ω–∞", "–ú–∞—Ä–∏—è", "–ï–ª–µ–Ω–∞", "–û–ª—å–≥–∞", "–¢–∞—Ç—å—è–Ω–∞", "–ù–∞—Ç–∞–ª—å—è", "–ò—Ä–∏–Ω–∞", "–°–≤–µ—Ç–ª–∞–Ω–∞", "–í–∏–∫—Ç–æ—Ä–∏—è", "–ü–æ–ª–∏–Ω–∞"];
const PATRONYMICS_M = ["–ò–≤–∞–Ω–æ–≤–∏—á", "–ü–µ—Ç—Ä–æ–≤–∏—á", "–°–µ—Ä–≥–µ–µ–≤–∏—á", "–ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤–∏—á", "–ê–Ω–¥—Ä–µ–µ–≤–∏—á", "–ù–∏–∫–æ–ª–∞–µ–≤–∏—á"];
const PATRONYMICS_F = ["–ò–≤–∞–Ω–æ–≤–Ω–∞", "–ü–µ—Ç—Ä–æ–≤–Ω–∞", "–°–µ—Ä–≥–µ–µ–≤–Ω–∞", "–ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤–Ω–∞", "–ê–Ω–¥—Ä–µ–µ–≤–Ω–∞", "–ù–∏–∫–æ–ª–∞–µ–≤–Ω–∞"];

// –ê–¥—Ä–µ—Å–∞
const STREETS = ["–õ–µ–Ω–∏–Ω–∞", "–°–æ–≤–µ—Ç—Å–∫–∞—è", "–ú–æ–ª–æ–¥—ë–∂–Ω–∞—è", "–®–∫–æ–ª—å–Ω–∞—è", "–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è", "–ü–æ–±–µ–¥—ã", "–ì–∞–≥–∞—Ä–∏–Ω–∞", "–ö–∏—Ä–æ–≤–∞"];
const CITIES = ["–ú–æ—Å–∫–≤–∞", "–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥", "–ö–∞–∑–∞–Ω—å", "–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥", "–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫", "–†–æ—Å—Ç–æ–≤-–Ω–∞-–î–æ–Ω—É", "–ö—Ä–∞—Å–Ω–æ–¥–∞—Ä", "–í–æ—Ä–æ–Ω–µ–∂"];

// –í–£–ó—ã –∏ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏
const UNIVERSITIES = [
  "–ú–ì–£ –∏–º. –õ–æ–º–æ–Ω–æ—Å–æ–≤–∞",
  "–°–ü–±–ì–£",
  "–ö–∞–∑–∞–Ω—Å–∫–∏–π —Ñ–µ–¥–µ—Ä–∞–ª—å–Ω—ã–π —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç",
  "–£—Ä–§–£",
  "–ú–§–¢–ò",
  "–ù–ò–£ –í–®–≠",
];
const SPECIALTIES = ["–ü—Ä–æ–≥—Ä–∞–º–º–Ω–∞—è –∏–Ω–∂–µ–Ω–µ—Ä–∏—è", "–Æ—Ä–∏—Å–ø—Ä—É–¥–µ–Ω—Ü–∏—è", "–≠–∫–æ–Ω–æ–º–∏–∫–∞", "–ú–µ–¥–∏—Ü–∏–Ω–∞", "–ü–µ–¥–∞–≥–æ–≥–∏–∫–∞", "–°—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ"];

// –ö–æ–º–ø–∞–Ω–∏–∏ –∏ –¥–æ–ª–∂–Ω–æ—Å—Ç–∏
const COMPANIES = ["–Ø–Ω–¥–µ–∫—Å", "–°–±–µ—Ä", "–ì–∞–∑–ø—Ä–æ–º", "–†–ñ–î", "–õ—É–∫–æ–π–ª", "–ú–¢–°", "–†–æ—Å—Ç–µ–ª–µ–∫–æ–º", "–¢–∞—Ç–Ω–µ—Ñ—Ç—å"];
const POSITIONS = ["–ò–Ω–∂–µ–Ω–µ—Ä", "–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫", "–Æ—Ä–∏—Å—Ç", "–ú–µ–Ω–µ–¥–∂–µ—Ä", "–£—á–∏—Ç–µ–ª—å", "–í—Ä–∞—á", "–≠–∫–æ–Ω–æ–º–∏—Å—Ç", "–ê–Ω–∞–ª–∏—Ç–∏–∫"];

// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–∞—Ç—ã
function randomDate(startYear, endYear) {
  const start = new Date(startYear, 0, 1);
  const end = new Date(endYear, 11, 31);
  return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()))
    .toISOString()
    .slice(0, 10);
}

// –°–ù–ò–õ–°
function generateSnils() {
  const num = () => String(Math.floor(100 + Math.random() * 900));
  const part1 = num();
  const part2 = num();
  const part3 = num();
  const check = String(Math.floor(10 + Math.random() * 90));
  return `${part1}-${part2}-${part3} ${check}`;
}

// –§–æ—Ç–æ
function photo(gender) {
  return gender === "–ú"
    ? `https://randomuser.me/api/portraits/men/${Math.floor(Math.random() * 90)}.jpg`
    : `https://randomuser.me/api/portraits/women/${Math.floor(Math.random() * 90)}.jpg`;
}

// –°–æ–∑–¥–∞–Ω–∏–µ –æ–¥–Ω–æ–≥–æ –≥—Ä–∞–∂–¥–∞–Ω–∏–Ω–∞
function createCitizen(id) {
  const gender = Math.random() > 0.5 ? "–ú" : "–ñ";
  const last = gender === "–ú" ? randomItem(LASTNAMES_M) : randomItem(LASTNAMES_F);;
  const first = gender === "–ú" ? randomItem(FIRSTNAMES_M) : randomItem(FIRSTNAMES_F);
  const patronymic = gender === "–ú" ? randomItem(PATRONYMICS_M) : randomItem(PATRONYMICS_F);
  const fullName = `${last} ${first} ${patronymic}`;

  const birthDate = randomDate(1960, 2005);
  const age = new Date().getFullYear() - new Date(birthDate).getFullYear();

  // –±–∞–∑–æ–≤—ã–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã
  const email = `${first.toLowerCase()}.${last.toLowerCase()}@mail.ru`;
  const phone = `+7 9${Math.floor(100000000 + Math.random() * 899999999)}`;
  const city = randomItem(CITIES);
  const regAddress = `${city}, —É–ª. ${randomItem(STREETS)}, –¥. ${Math.ceil(Math.random() * 50)}, –∫–≤. ${Math.ceil(Math.random() * 150)}`;

  // –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ
  const education = [
    {
      institution: randomItem(UNIVERSITIES),
      specialty: randomItem(SPECIALTIES),
      graduationYear: 2000 + Math.floor(Math.random() * 20),
      diplomaNum: `D-${10000 + Math.floor(Math.random() * 90000)}`,
    },
  ];

  // —Ä–∞–±–æ—Ç–∞
  const work = {
    currentJob: randomItem(COMPANIES),
    position: randomItem(POSITIONS),
    startDate: randomDate(2005, 2022),
  };

  // —Å–µ–º—å—è: —É—á–∏—Ç—ã–≤–∞–µ–º –ø–æ–ª –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ä–æ–¥—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Å–≤—è–∑–µ–π
  const family = [];
  if (gender === "–ú") {
    family.push({
      fullName: `${randomItem(LASTNAMES_F)} ${randomItem(FIRSTNAMES_F)} ${randomItem(PATRONYMICS_F)}`,
      relation: "–ñ–µ–Ω–∞",
      birthDate: randomDate(1965, 2002),
      snils: generateSnils(),
    });
    family.push({
      fullName: `${randomItem(LASTNAMES_M)} ${randomItem(FIRSTNAMES_M)} ${randomItem(PATRONYMICS_M)}`,
      relation: "–°—ã–Ω",
      birthDate: randomDate(2000, 2015),
      snils: generateSnils(),
    });
  } else {
    family.push({
      fullName: `${randomItem(LASTNAMES_M)} ${randomItem(FIRSTNAMES_M)} ${randomItem(PATRONYMICS_M)}`,
      relation: "–ú—É–∂",
      birthDate: randomDate(1965, 2002),
      snils: generateSnils(),
    });
    family.push({
      fullName: `${randomItem(LASTNAMES_F)} ${randomItem(FIRSTNAMES_F)} ${randomItem(PATRONYMICS_F)}`,
      relation: "–î–æ—á—å",
      birthDate: randomDate(2000, 2015),
      snils: generateSnils(),
    });
  }

  // –ª—å–≥–æ—Ç—ã
  const benefits = [];
  if (Math.random() < 0.2) benefits.push("–∏–Ω–≤–∞–ª–∏–¥");
  if (Math.random() < 0.15) benefits.push("–º–Ω–æ–≥–æ–¥–µ—Ç–Ω—ã–π");
  if (Math.random() < 0.1) benefits.push("–≤–µ—Ç–µ—Ä–∞–Ω");

  // --- –î–û–ë–ê–í–õ–Ø–ï–ú –ü–û–õ–Ø –î–õ–Ø –î–ê–®–ë–û–†–î–û–í ---  
  const maritalStatuses = ["–ñ–µ–Ω–∞—Ç/–ó–∞–º—É–∂–µ–º", "–•–æ–ª–æ—Å—Ç/–ù–µ –∑–∞–º—É–∂–µ–º", "–†–∞–∑–≤–µ–¥—ë–Ω/–†–∞–∑–≤–µ–¥–µ–Ω–∞"];
  const maritalStatus = randomItem(maritalStatuses);

  // —É—Ä–æ–≤–µ–Ω—å –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è
  let educationLevel = "–°—Ä–µ–¥–Ω–µ–µ –æ–±—â–µ–µ";
  if (education[0].specialty === "–ü—Ä–æ–≥—Ä–∞–º–º–Ω–∞—è –∏–Ω–∂–µ–Ω–µ—Ä–∏—è" || education[0].specialty === "–Æ—Ä–∏—Å–ø—Ä—É–¥–µ–Ω—Ü–∏—è" || education[0].specialty === "–≠–∫–æ–Ω–æ–º–∏–∫–∞" || education[0].specialty === "–ú–µ–¥–∏—Ü–∏–Ω–∞") {
    educationLevel = "–í—ã—Å—à–µ–µ";
  } else if (education[0].specialty === "–ü–µ–¥–∞–≥–æ–≥–∏–∫–∞" || education[0].specialty === "–°—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ") {
    educationLevel = "–°—Ä–µ–¥–Ω–µ–µ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ";
  }

  // —Å—Ç–∞—Ç—É—Å –∑–∞–Ω—è—Ç–æ—Å—Ç–∏
  let employment = "–†–∞–±–æ—Ç–∞–µ—Ç";
  if (age > 65) employment = "–ü–µ–Ω—Å–∏–æ–Ω–µ—Ä";
  if (Math.random() < 0.1) employment = "–ë–µ–∑—Ä–∞–±–æ—Ç–Ω—ã–π";

  const profession = work.position;

  return {
    id: `CIT-${String(id).padStart(5, "0")}`,
    fullName,
    gender,
    birthDate,
    age, // üëà –¥–æ–±–∞–≤–ª–µ–Ω–æ
    email,
    phone,
    regAddress,
    snils: generateSnils(),
    photo: photo(gender),
    region: city,
    education,
    work,
    family,
    benefits,
    maritalStatus,   // üëà –¥–æ–±–∞–≤–ª–µ–Ω–æ
    educationLevel,  // üëà –¥–æ–±–∞–≤–ª–µ–Ω–æ
    employment,      // üëà –¥–æ–±–∞–≤–ª–µ–Ω–æ
    profession,      // üëà –¥–æ–±–∞–≤–ª–µ–Ω–æ
    cases: [
      { topic: "–≠–∫–æ–ª–æ–≥–∏—è", date: "2025-01-01" },
      { topic: "–õ—å–≥–æ—Ç—ã", date: "2025-02-01" },
    ],
  };
}

export const mockCitizens = Array.from({ length: 200 }, (_, i) => createCitizen(i + 1));
